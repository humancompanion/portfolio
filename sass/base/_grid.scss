// ---------------------------------------------------------------------------
// Base: Grid - A version of Solved by Flexbox

.l-grid {
  display: table-cell;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  flex-wrap: wrap;
  flex-basis: $base-font-size;
  list-style: none;
  margin: 0;
  padding: 0;

  &.g-row {
    margin-top: $size-L;
    margin-bottom: $size-L;
  }

  &.g-row--painted {
    background-color: $grey-light;
  }
}

.g-cell {
  -webkit-box-flex: 1;
  -webkit-flex: 1;
      -ms-flex: 1;
          flex: 1;
}

.g-flex_cells {
  & > .g-cell {
    display: table-cell;
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
  }
}


// Align grid cells
.g-top {
  -webkit-align-items: flex-start;
     -moz-align-items: flex-start;
      -ms-align-items: flex-start;
          align-items: flex-start;
       -ms-flex-align: start;
}

.g-bottom {
  -webkit-align-items: flex-end;
     -moz-align-items: flex-end;
      -ms-align-items: flex-end;
          align-items: flex-end;
       -ms-flex-align: end;
}

.g-center {
  align-items: center;
}

.g-v-top {
  justify-content: flex-start;
}

.g-v-bottom {
  justify-content: flex-end;
}

.g-v-center {
  justify-content: center;
}

// Align individual cells
.g-cell-top {
  align-self: flex-start;
}

.g-cell-bottom {
  align-self: flex-end;
}

.g-cell-center {
  align-self: center;
}

.l-grid.g-debug {
  .g-cell {
    // border: 1px dashed $black;
  }
}

// Examples:
//  .g-B--full
//  .g-S--fit
//  .g-M--1of2
//  .g-L--1of3
//  .g-XL--1of4
@mixin grid-sizing($name: "") {
  $sep: "-";
  @if $name == "" {
    $sep: "B-";
  }
  .g-#{$name}#{$sep}-fit > .g-cell,
  .g-cell.g-#{$name}#{$sep}-fit {
  -webkit-box-flex: 1;
  -webkit-flex: 1;
      -ms-flex: 1;
          flex: 1;
  }
  .g-#{$name}#{$sep}-full > .g-cell,
  .g-cell.g-#{$name}#{$sep}-full {
    @include flex(0 0 100%);
  }
  .g-#{$name}#{$sep}-1of2 > .g-cell,
  .g-cell.g-#{$name}#{$sep}-1of2 {
    @include flex(0 0 50%);
  }
  .g-#{$name}#{$sep}-1of3 > .g-cell,
  .g-cell.g-#{$name}#{$sep}-1of3 {
    @include flex(0 0 33.3333%);
  }
  .g-#{$name}#{$sep}-1of4 > .g-cell,
  .g-cell.g-#{$name}#{$sep}-1of4 {
    @include flex(0 0 25%);
  }
}

// create the default grid-sizing modifiers
@include grid-sizing();

// create grid-sizing modifiers for each breakpoint
@each $breakpoint in $breakpoints {
  $name: nth($breakpoint, 2);
  @include breakpoint($name) {
    @include grid-sizing($name);
  }
}

// Examples:
//    .g-B--gutters
//    .g-S-gutters
//    .g-M-guttersLarge
//    .g-L-gutters2x
//    .g-XL-gutters3x
@mixin grid-gutters($name: "") {
  $sep: "-";
  @if $name == "" {
    $name: "B";
  }
  .g-#{$name}#{$sep}gutters {
    margin-left: -0.5rem;
    & > .g-cell {
      padding-left: 0.5rem;
    }
  }
  .g-#{$name}#{$sep}guttersLarge {
    margin-left: -1rem;
    & > .g-cell {
      padding-left: 1rem;
    }
  }
  .g-#{$name}#{$sep}gutters2x {
    margin-left: -2rem;
    & > .g-cell {
      padding-left: 2rem;
    }
  }
  .g-#{$name}#{$sep}gutters3x {
    margin-left: -3rem;
    & > .g-cell {
      padding-left: 3rem;
    }
  }
  // Removes just the outer gutter
  .g-#{$name}#{$sep}guttersRemoveOuter {
    margin-left: 0;

    & > .g-cell:first-child {
      padding-left: 0;
    }
  }
}

// create the default grid-gutters modifiers
@include grid-gutters();

// create grid-gutters modifiers for each breakpoint
@each $breakpoint in $breakpoints {
  $name: nth($breakpoint, 2);
  @include breakpoint($name) {
    @include grid-gutters($name);
  }
}
